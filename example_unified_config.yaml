# DELM Unified Schema Configuration Examples
# Demonstrates progressive complexity levels

# Level 1: Simple Schema (Current DELM behavior)
simple_example:
  model_name: "gpt-4o-mini"
  temperature: 0.0
  max_retries: 3
  
  extraction:
    variables:
      - name: "company_names"
        description: "Company names mentioned in the text"
        data_type: "string"
        required: false
      
      - name: "revenue_numbers"
        description: "Revenue figures mentioned"
        data_type: "number"
        required: false

# Level 2: Nested Schema (Enhanced)
nested_example:
  model_name: "gpt-4o-mini"
  temperature: 0.0
  max_retries: 3
  batch_size: 10
  max_workers: 4
  
  extraction:
    schema_type: "nested"
    container_name: "companies"
    variables:
      - name: "name"
        description: "Company name"
        data_type: "string"
        required: true
      
      - name: "revenue"
        description: "Revenue figure"
        data_type: "number"
        required: false
      
      - name: "sector"
        description: "Business sector"
        data_type: "string"
        required: false
        allowed_values: ["technology", "finance", "healthcare", "energy", "retail"]
    
    prompt_template: |
      Extract company information from the following text:
      
      {variables}
      
      Text to analyze:
      {text}

# Level 3: Multiple Schemas (Advanced)
multiple_example:
  model_name: "gpt-4o-mini"
  temperature: 0.0
  max_retries: 3
  batch_size: 10
  max_workers: 4
  
  extraction:
    schema_type: "multiple"
    
    # Companies schema
    companies:
      schema_type: "nested"
      container_name: "companies"
      variables:
        - name: "name"
          description: "Company name"
          data_type: "string"
        - name: "revenue"
          description: "Revenue figure"
          data_type: "number"
    
    # Products schema
    products:
      schema_type: "nested"
      container_name: "products"
      variables:
        - name: "name"
          description: "Product name"
          data_type: "string"
        - name: "price"
          description: "Product price"
          data_type: "number"
        - name: "category"
          description: "Product category"
          data_type: "string"
          allowed_values: ["software", "hardware", "service", "consulting"] 