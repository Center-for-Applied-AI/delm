[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "delm"
version = "0.2.0"
description = "Data Extraction Language Model - A pipeline for extracting structured data from text using language models"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Eric Fithian - Chicago Booth CAAI Lab"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "openai>=1.0.0",
    "instructor>=0.4.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.64.0",
    "rapidfuzz>=3.0.0",
    "beautifulsoup4>=4.11.0",
    "python-docx>=0.8.11",
    "marker>=0.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

# Optional LLM providers
anthropic = [
    "anthropic>=0.7.0",
]

google = [
    "google-generativeai>=0.3.0",
]

groq = [
    "groq>=0.4.0",
]

# All providers
all-providers = [
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "groq>=0.4.0",
]

[project.urls]
Homepage = "https://github.com/your-org/delm"
Repository = "https://github.com/your-org/delm"
Documentation = "https://github.com/your-org/delm#readme"
Issues = "https://github.com/your-org/delm/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]
exclude = ["tests*", "*.egg-info*", "__pycache__*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "openai.*",
    "instructor.*",
    "rapidfuzz.*",
    "bs4.*",
    "docx.*",
    "marker.*",
]
ignore_missing_imports = true 