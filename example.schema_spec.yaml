# DELM Schema Specification Template
# =================================
# This file defines the extraction schema for DELM (Data Extraction with LLMs).
# Copy this file and modify the extraction section for your specific use case.

# =============================================================================
# EXTRACTION SCHEMA CONFIGURATION
# =============================================================================

# Schema type determines how data is structured
# Options: "simple", "nested", "multiple"
# - simple: Key-value pairs (e.g., {"price": 100, "company": "Apple"})
# - nested: List of objects (e.g., {"commodities": [{"type": "oil", "price": 100}]})
# - multiple: Multiple independent schemas in one config (e.g., {"commodities": [{"type": "oil", "price": 100}], "companies": [{"name": "Apple", "sector": "Technology"}]})
schema_type: "nested"

# Container name for nested schemas (only used when schema_type = "nested")
# This becomes the key that holds the list of extracted objects
container_name: "commodities"

# Variables to extract from text
# Each variable defines a field in your extracted data
variables:
  # Example 1: Required string with allowed values
  - name: "commodity_type"
    description: "Type of commodity mentioned in the text"
    data_type: "string"
    required: true
    allowed_values: ["oil", "gas", "copper", "gold", "silver", "steel", "aluminum"]
    validate_in_text: true
  
  # Example 2: Optional boolean field
  - name: "price_mention"
    description: "Whether a specific price is mentioned"
    data_type: "boolean"
    required: false
  
  # Example 3: Optional numeric field
  - name: "price_value"
    description: "Numeric price value if mentioned"
    data_type: "number"
    required: false
  
  # Example 4: Optional string without restrictions
  - name: "price_unit"
    description: "Unit of the price (e.g., barrel, ton, MMBtu)"
    data_type: "string"
    required: false
  
  # Example 5: Optional string with allowed values
  - name: "expectation_type"
    description: "Type of price expectation mentioned"
    data_type: "string"
    required: false
    allowed_values: ["forecast", "guidance", "estimate", "projection", "outlook"]
  
  # Example 6: Optional string for company names
  - name: "company_mention"
    description: "Company names mentioned in relation to commodities"
    data_type: "string"
    required: false
    validate_in_text: true

# Prompt template for LLM extraction
# Use {text} for the input text and {variables} for variable descriptions
# Add any additional instructions at the end such as important instructions
prompt_template: |
  You are assisting a finance professor who expects meticulous and reliable results.

  Extract commodity price information from the following text:

  {variables}

  Text to analyze:
  {text}

  CRITICAL INSTRUCTIONS:
  - ONLY extract commodities that are EXPLICITLY mentioned in the text
  - If NO commodities are mentioned, return an empty list []
  - Do NOT infer or guess commodity types based on company names or context
  - Do NOT extract commodities just because a company might be in the energy sector
  - Focus on EXPLICIT mentions of: oil, gas, copper, gold, silver, steel, aluminum
  - For each commodity mentioned, create a separate entry with all relevant details
  - If a field is not mentioned in the text, leave it as null/None rather than guessing

  Examples of what NOT to extract:
  - "1-800 CONTACTS" → NOT oil (even though contacts might use oil-based solutions)
  - "Apple Inc." → NOT aluminum (even though phones contain aluminum)
  - "Bank of America" → NOT gold (even though banks might trade gold)

# =============================================================================
# ALTERNATIVE SCHEMA EXAMPLES
# =============================================================================

# Example 1: Simple Schema (Key-Value Pairs)
# Uncomment and modify this section to use simple extraction
# schema_type: "simple"
# variables:
#   - name: "price"
#     description: "Price mentioned in the text"
#     data_type: "number"
#     required: false
#   - name: "company"
#     description: "Company name mentioned"
#     data_type: "string"
#     required: false
# prompt_template: "Extract the following information from the text: {variables}\n\nText: {text}"

# =============================================================================
# DATA TYPE REFERENCE
# =============================================================================

# Available data types for variables:
# - "string": Text values (default)
# - "number": Floating-point numbers
# - "integer": Whole numbers
# - "boolean": True/False values
# - "date": Date strings (YYYY-MM-DD format recommended)

# Field properties:
# - name: Unique identifier for the field (required)
# - description: Human-readable description for the LLM (required)
# - data_type: Type of data to extract (required)
# - required: Whether the field must be present (default: false)
# - allowed_values: List of valid values for the field (optional)
# - validate_in_text: Whether to validate the extracted value appears in the text (default: false)

# =============================================================================
# PROMPT TEMPLATE GUIDELINES
# =============================================================================

# Best practices for prompt templates:
# 1. Be explicit about what to extract and what NOT to extract
# 2. Provide clear examples of correct and incorrect extractions
# 3. Use {variables} placeholder to include variable descriptions
# 4. Use {text} placeholder for the input text
# 5. Include validation rules in the prompt
# 6. Specify what to do when information is not found (null vs. empty) 